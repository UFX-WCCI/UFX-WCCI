@model UFX_WCCI.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

@*Need hidden input fields; input type=hidden
    instead of document.getelementById, look at forms and change value of form field. Its Id will be document.getElementById.Latitude?
    *@

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<>
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
    <dt>Password:</dt>
    <dd>
        [
        @if (Model.HasPassword)
            {
            @Html.ActionLink("Change your password", "ChangePassword")
        }
        else
        {
            @Html.ActionLink("Create", "SetPassword")
        }
        ]
    </dd>
    @using (Html.BeginForm("EditProfile", "Manage", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })

        //photo upload code from B4B sample
        <div class="form-group">
            @Html.Label("Avatar", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="upload" id="Avatar" />
                <br />
            </div>
        </div>

        <!-- end Profile Picture -->
        @*@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })*@

        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })

        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    }

